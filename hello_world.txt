sh "git checkout origin ${branchName}"

                        // Try merging, allow failure
                        def mergeStatus = sh(
                            script: "git merge --no-commit --no-ff ${params.TAG} || true",
                            returnStatus: true
                        )

                        if (mergeStatus != 0) {
                            echo "Merge conflict detected."

                            def conflicted_files = sh(
                                script: "git diff --name-only --diff-filter=U",
                                returnStdout: true
                            ).trim()

                            echo "Conflicted files: ${conflicted_files}"

                            if (conflicted_files == "system/config/version.properties") {
                                echo "Only system/config/version.properties conflicted. Resolving by keeping branch version."

                                sh """
                                    git checkout --ours system/config/version.properties
                                    git add system/config/version.properties
                                    git commit -m 'Merged ${params.TAG} into ${params.BRANCH} - resolved version.properties conflict by keeping branch version.'
                                """
                            } else {
                                error("Conflict detected in files other than system/config/version.properties. Aborting.")
                            }
                        } else {
                            echo "Merge successful without conflicts."
                            sh "git commit -m 'Merged ${params.TAG} into ${params.BRANCH}'"
                        }