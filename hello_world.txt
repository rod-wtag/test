# Try merging the tag
set +e  # Allow merge conflicts temporarily

git merge ${env.TAG_NAME} -m 'Merge tag ${env.TAG_NAME}'

merge_exit_code=$?
set -e  # Back to strict mode

if [ $merge_exit_code -ne 0 ]; then
    echo "Merge conflicts detected. Checking conflicted files..."

    conflicted_files=$(git diff --name-only --diff-filter=U)

    # Check if conflicts only happen in system/config/version.properties
    if echo "$conflicted_files" | grep -qv "^system/config/version.properties$"; then
        echo "Conflicts found in files other than version.properties. Aborting merge."
        git merge --abort
        exit 1
    else
        echo "Only version.properties is conflicted. Resolving by keeping existing version."

        # Checkout our version of the file
        git checkout --ours system/config/version.properties
        git add system/config/version.properties

        # Continue merge
        git commit -m "Resolve version.properties conflict by keeping existing content."
    fi
fi



# Push the merged branch
CURRENT_BRANCH=$(git branch --show-current)
git push https://${GIT_USERNAME}:${GIT_TOKEN}@${REPO_URL} HEAD:${CURRENT_BRANCH}






git branch -D ${branchName}-local || true
                                git checkout origin/${branchName} -b ${branchName}-local





                                git checkout origin/main -B main-local
                                git checkout -b merge/${env.TAG_NAME}